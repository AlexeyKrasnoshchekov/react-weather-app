{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","long","lat","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","api","process","useState","currentWeather","setCurrentWeather","getWeather","a","fetch","data","json","dataJSON","useEffect","className","location","name","temperature","main","temp","description","weather","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAAe,I,YC4CAA,MAvCf,WACE,IAAIC,EACAC,EAEJC,UAAUC,YAAYC,oBAAmB,SAACC,GACxCL,EAAOK,EAASC,OAAOC,UACvBN,EAAMI,EAASC,OAAOE,YAGxB,IAEMC,EAAG,UAFK,uCAEL,uDAA0DR,EAA1D,gBAAqED,EAArE,iCADMU,oCAGf,EAA8CC,mBAAS,IAA/CC,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,kBAGlBC,EAAU,uCAAG,8BAAAC,EAAA,sEACAC,MAAMP,GADN,cACbQ,EADa,gBAEIA,EAAKC,OAFT,OAEbC,EAFa,OAIjBN,EAAkBM,GAJD,2CAAH,qDAYhB,OAJAC,qBAAU,WACRN,MACC,IAGD,qBAAKO,UAAU,MAAf,SACE,oCACEC,SAAYV,EAAeW,KAC3BC,YAAaZ,EAAea,KAAKC,KACjCC,YAAaf,EAAegB,QAAQ,GAAGD,iBC1BhCE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f19d5e2c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { geolocationWeather } from \"./geolocationWeather.js\";\n\nfunction App() {\n  let long;\n  let lat;\n\n  navigator.geolocation.getCurrentPosition((position) => {\n    long = position.coords.longitude;\n    lat = position.coords.latitude;\n  });\n\n  const proxy = \"https://cors-anywhere.herokuapp.com/\";\n  const APP_ID = process.env.REACT_APP_API_ID;\n  const api = `${proxy}api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&units=imperial&appid=${APP_ID}`;\n\n  const { currentWeather, setCurrentWeather } = useState({});\n  // const { currentWeatherType, setCurrentWeatherType } = useState([]);\n\n  const getWeather = async () => {\n    let data = await fetch(api);\n    let dataJSON = await data.json();\n\n    setCurrentWeather(dataJSON);\n    // setCurrentWeatherType(dataJSON);\n  };\n\n  useEffect(() => {\n    getWeather();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <geolocationWeather\n        location = {currentWeather.name}\n        temperature={currentWeather.main.temp}\n        description={currentWeather.weather[0].description}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}