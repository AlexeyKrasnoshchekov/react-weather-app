{"version":3,"sources":["GeolocationWeather.js","Form.js","WeatherIcons.js","Weather.js","WeatherChart.js","App.js","reportWebVitals.js","index.js"],"names":["GeolocationWeather","location","temperature","description","setTemperature","icon","class","onClick","scaleName","document","querySelector","textContent","Math","floor","className","Form","search","updateSearch","getSearch","onSubmit","type","value","onChange","placeholder","WeatherIcons","Weather","date","weatherTime","weatherDegree","weatherFeels","weatherCode","weatherDescription","iconTimes","setIconTimes","weatherTimeSub","substring","length","dateFormat","Date","getDate","LineChart","data","labels","xlabels","datasets","label","ytemps","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","App","long","lat","xlabelsArr","ytempsArr","proxy","useState","name","setName","setDescription","setIcon","setSearch","city","setCity","weatherTimes","setWeatherTimes","setXlabels","setYtemps","getWeatherGeo","api","a","fetch","json","dataJSON","main","temp","weather","code","id","navigator","geolocation","getCurrentPosition","position","console","log","coords","longitude","latitude","getFetchGeo","process","getWeatherClick","dataList","list","getWeatherChart","map","time","dt","getHours","push","useEffect","e","target","preventDefault","dt_txt","feels_like","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1d60afa6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst GeolocationWeather = ({ location, temperature, description, setTemperature, icon }) => {   \r\n\r\n    const toFahrenheit = () => {\r\n        let scaleName = document.querySelector('.scale-name');\r\n\r\n        if (scaleName.textContent === 'C') {       \r\n            scaleName.textContent = 'F';\r\n            setTemperature( Math.floor(temperature / 5 * 9 + 32) );\r\n            \r\n        } else {\r\n            scaleName.textContent = 'C';\r\n            setTemperature( Math.floor( (temperature - 32)*(5/9) ) );\r\n        }\r\n        \r\n    }  \r\n\r\n  return (\r\n    <div class=\"location\">\r\n      <h1 class=\"location-place\">{location}</h1>\r\n      <div class=\"temperature\">\r\n        <div class=\"degree-section\">\r\n          <h2 class=\"temperature-degree\" onClick={toFahrenheit}>{temperature} <span className=\"scale-name\">C</span></h2>\r\n          <span></span>\r\n        </div>\r\n      </div>\r\n      <div class=\"degree-container\">\r\n        <i class={`wi wi-icon wi-${icon}`}></i>\r\n        <div class=\"temperature-description\">{description}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GeolocationWeather;\r\n","import React from \"react\";\r\n\r\nconst Form = ({ search, updateSearch, getSearch }) => {   \r\n    return(\r\n        <form className=\"form\" onSubmit={getSearch}>\r\n            <input className=\"input_text\" type=\"text\" value={search}\r\n          onChange={updateSearch} placeholder=\"введите город...\"/>\r\n            <button type=\"submit\" className=\"submit\">OK</button>\r\n        </form>\r\n        \r\n\r\n    )\r\n}\r\n\r\nexport default Form;","let WeatherIcons = {\r\n    \"200\": {\r\n      \"label\": \"thunderstorm with light rain\",\r\n      \"icon\": \"storm-showers\"\r\n    },\r\n  \r\n    \"201\": {\r\n      \"label\": \"thunderstorm with rain\",\r\n      \"icon\": \"storm-showers\"\r\n    },\r\n  \r\n    \"202\": {\r\n      \"label\": \"thunderstorm with heavy rain\",\r\n      \"icon\": \"storm-showers\"\r\n    },\r\n  \r\n    \"210\": {\r\n      \"label\": \"light thunderstorm\",\r\n      \"icon\": \"storm-showers\"\r\n    },\r\n  \r\n    \"211\": {\r\n      \"label\": \"thunderstorm\",\r\n      \"icon\": \"thunderstorm\"\r\n    },\r\n  \r\n    \"212\": {\r\n      \"label\": \"heavy thunderstorm\",\r\n      \"icon\": \"thunderstorm\"\r\n    },\r\n  \r\n    \"221\": {\r\n      \"label\": \"ragged thunderstorm\",\r\n      \"icon\": \"thunderstorm\"\r\n    },\r\n  \r\n    \"230\": {\r\n      \"label\": \"thunderstorm with light drizzle\",\r\n      \"icon\": \"storm-showers\"\r\n    },\r\n  \r\n    \"231\": {\r\n      \"label\": \"thunderstorm with drizzle\",\r\n      \"icon\": \"storm-showers\"\r\n    },\r\n  \r\n    \"232\": {\r\n      \"label\": \"thunderstorm with heavy drizzle\",\r\n      \"icon\": \"storm-showers\"\r\n    },\r\n  \r\n    \"300\": {\r\n      \"label\": \"light intensity drizzle\",\r\n      \"icon\": \"sprinkle\"\r\n    },\r\n  \r\n    \"301\": {\r\n      \"label\": \"drizzle\",\r\n      \"icon\": \"sprinkle\"\r\n    },\r\n  \r\n    \"302\": {\r\n      \"label\": \"heavy intensity drizzle\",\r\n      \"icon\": \"sprinkle\"\r\n    },\r\n  \r\n    \"310\": {\r\n      \"label\": \"light intensity drizzle rain\",\r\n      \"icon\": \"sprinkle\"\r\n    },\r\n  \r\n    \"311\": {\r\n      \"label\": \"drizzle rain\",\r\n      \"icon\": \"sprinkle\"\r\n    },\r\n  \r\n    \"312\": {\r\n      \"label\": \"heavy intensity drizzle rain\",\r\n      \"icon\": \"sprinkle\"\r\n    },\r\n  \r\n    \"313\": {\r\n      \"label\": \"shower rain and drizzle\",\r\n      \"icon\": \"sprinkle\"\r\n    },\r\n  \r\n    \"314\": {\r\n      \"label\": \"heavy shower rain and drizzle\",\r\n      \"icon\": \"sprinkle\"\r\n    },\r\n  \r\n    \"321\": {\r\n      \"label\": \"shower drizzle\",\r\n      \"icon\": \"sprinkle\"\r\n    },\r\n  \r\n    \"500\": {\r\n      \"label\": \"light rain\",\r\n      \"icon\": \"rain\"\r\n    },\r\n  \r\n    \"501\": {\r\n      \"label\": \"moderate rain\",\r\n      \"icon\": \"rain\"\r\n    },\r\n  \r\n    \"502\": {\r\n      \"label\": \"heavy intensity rain\",\r\n      \"icon\": \"rain\"\r\n    },\r\n  \r\n    \"503\": {\r\n      \"label\": \"very heavy rain\",\r\n      \"icon\": \"rain\"\r\n    },\r\n  \r\n    \"504\": {\r\n      \"label\": \"extreme rain\",\r\n      \"icon\": \"rain\"\r\n    },\r\n  \r\n    \"511\": {\r\n      \"label\": \"freezing rain\",\r\n      \"icon\": \"rain-mix\"\r\n    },\r\n  \r\n    \"520\": {\r\n      \"label\": \"light intensity shower rain\",\r\n      \"icon\": \"showers\"\r\n    },\r\n  \r\n    \"521\": {\r\n      \"label\": \"shower rain\",\r\n      \"icon\": \"showers\"\r\n    },\r\n  \r\n    \"522\": {\r\n      \"label\": \"heavy intensity shower rain\",\r\n      \"icon\": \"showers\"\r\n    },\r\n  \r\n    \"531\": {\r\n      \"label\": \"ragged shower rain\",\r\n      \"icon\": \"showers\"\r\n    },\r\n  \r\n    \"600\": {\r\n      \"label\": \"light snow\",\r\n      \"icon\": \"snow\"\r\n    },\r\n  \r\n    \"601\": {\r\n      \"label\": \"snow\",\r\n      \"icon\": \"snow\"\r\n    },\r\n  \r\n    \"602\": {\r\n      \"label\": \"heavy snow\",\r\n      \"icon\": \"snow\"\r\n    },\r\n  \r\n    \"611\": {\r\n      \"label\": \"sleet\",\r\n      \"icon\": \"sleet\"\r\n    },\r\n  \r\n    \"612\": {\r\n      \"label\": \"shower sleet\",\r\n      \"icon\": \"sleet\"\r\n    },\r\n  \r\n    \"615\": {\r\n      \"label\": \"light rain and snow\",\r\n      \"icon\": \"rain-mix\"\r\n    },\r\n  \r\n    \"616\": {\r\n      \"label\": \"rain and snow\",\r\n      \"icon\": \"rain-mix\"\r\n    },\r\n  \r\n    \"620\": {\r\n      \"label\": \"light shower snow\",\r\n      \"icon\": \"rain-mix\"\r\n    },\r\n  \r\n    \"621\": {\r\n      \"label\": \"shower snow\",\r\n      \"icon\": \"rain-mix\"\r\n    },\r\n  \r\n    \"622\": {\r\n      \"label\": \"heavy shower snow\",\r\n      \"icon\": \"rain-mix\"\r\n    },\r\n  \r\n    \"701\": {\r\n      \"label\": \"mist\",\r\n      \"icon\": \"sprinkle\"\r\n    },\r\n  \r\n    \"711\": {\r\n      \"label\": \"smoke\",\r\n      \"icon\": \"smoke\"\r\n    },\r\n  \r\n    \"721\": {\r\n      \"label\": \"haze\",\r\n      \"icon\": \"day-haze\"\r\n    },\r\n  \r\n    \"731\": {\r\n      \"label\": \"sand, dust whirls\",\r\n      \"icon\": \"cloudy-gusts\"\r\n    },\r\n  \r\n    \"741\": {\r\n      \"label\": \"fog\",\r\n      \"icon\": \"fog\"\r\n    },\r\n  \r\n    \"751\": {\r\n      \"label\": \"sand\",\r\n      \"icon\": \"cloudy-gusts\"\r\n    },\r\n  \r\n    \"761\": {\r\n      \"label\": \"dust\",\r\n      \"icon\": \"dust\"\r\n    },\r\n  \r\n    \"762\": {\r\n      \"label\": \"volcanic ash\",\r\n      \"icon\": \"smog\"\r\n    },\r\n  \r\n    \"771\": {\r\n      \"label\": \"squalls\",\r\n      \"icon\": \"day-windy\"\r\n    },\r\n  \r\n    \"781\": {\r\n      \"label\": \"tornado\",\r\n      \"icon\": \"tornado\"\r\n    },\r\n  \r\n    \"800\": {\r\n      \"label\": \"clear sky\",\r\n      \"icon\": \"sunny\"\r\n    },\r\n  \r\n    \"801\": {\r\n      \"label\": \"few clouds\",\r\n      \"icon\": \"cloudy\"\r\n    },\r\n  \r\n    \"802\": {\r\n      \"label\": \"scattered clouds\",\r\n      \"icon\": \"cloudy\"\r\n    },\r\n  \r\n    \"803\": {\r\n      \"label\": \"broken clouds\",\r\n      \"icon\": \"cloudy\"\r\n    },\r\n  \r\n    \"804\": {\r\n      \"label\": \"overcast clouds\",\r\n      \"icon\": \"cloudy\"\r\n    },\r\n  \r\n  \r\n    \"900\": {\r\n      \"label\": \"tornado\",\r\n      \"icon\": \"tornado\"\r\n    },\r\n  \r\n    \"901\": {\r\n      \"label\": \"tropical storm\",\r\n      \"icon\": \"hurricane\"\r\n    },\r\n  \r\n    \"902\": {\r\n      \"label\": \"hurricane\",\r\n      \"icon\": \"hurricane\"\r\n    },\r\n  \r\n    \"903\": {\r\n      \"label\": \"cold\",\r\n      \"icon\": \"snowflake-cold\"\r\n    },\r\n  \r\n    \"904\": {\r\n      \"label\": \"hot\",\r\n      \"icon\": \"hot\"\r\n    },\r\n  \r\n    \"905\": {\r\n      \"label\": \"windy\",\r\n      \"icon\": \"windy\"\r\n    },\r\n  \r\n    \"906\": {\r\n      \"label\": \"hail\",\r\n      \"icon\": \"hail\"\r\n    },\r\n  \r\n    \"951\": {\r\n      \"label\": \"calm\",\r\n      \"icon\": \"sunny\"\r\n    },\r\n  \r\n    \"952\": {\r\n      \"label\": \"light breeze\",\r\n      \"icon\": \"cloudy-gusts\"\r\n    },\r\n  \r\n    \"953\": {\r\n      \"label\": \"gentle breeze\",\r\n      \"icon\": \"cloudy-gusts\"\r\n    },\r\n  \r\n    \"954\": {\r\n      \"label\": \"moderate breeze\",\r\n      \"icon\": \"cloudy-gusts\"\r\n    },\r\n  \r\n    \"955\": {\r\n      \"label\": \"fresh breeze\",\r\n      \"icon\": \"cloudy-gusts\"\r\n    },\r\n  \r\n    \"956\": {\r\n      \"label\": \"strong breeze\",\r\n      \"icon\": \"cloudy-gusts\"\r\n    },\r\n  \r\n    \"957\": {\r\n      \"label\": \"high wind, near gale\",\r\n      \"icon\": \"cloudy-gusts\"\r\n    },\r\n  \r\n    \"958\": {\r\n      \"label\": \"gale\",\r\n      \"icon\": \"cloudy-gusts\"\r\n    },\r\n  \r\n    \"959\": {\r\n      \"label\": \"severe gale\",\r\n      \"icon\": \"cloudy-gusts\"\r\n    },\r\n  \r\n    \"960\": {\r\n      \"label\": \"storm\",\r\n      \"icon\": \"thunderstorm\"\r\n    },\r\n  \r\n    \"961\": {\r\n      \"label\": \"violent storm\",\r\n      \"icon\": \"thunderstorm\"\r\n    },\r\n  \r\n    \"962\": {\r\n      \"label\": \"hurricane\",\r\n      \"icon\": \"cloudy-gusts\"\r\n    }\r\n  };\r\n\r\n  export default WeatherIcons;","import React from \"react\";\r\nimport WeatherIcons from \"./WeatherIcons.js\";\r\n\r\nconst Weather = ({ date, weatherTime, weatherDegree, weatherFeels, weatherCode, weatherDescription, iconTimes, setIconTimes }) => {   \r\n\r\n    if (!(weatherCode > 699 && weatherCode < 800) && !(weatherCode > 899 && weatherCode < 1000)) {\r\n        setIconTimes('day-' + WeatherIcons[weatherCode].icon);\r\n    }\r\n\r\n    let weatherTimeSub = weatherTime.substring(weatherTime.length - 8, weatherTime.length - 3);\r\n    let dateFormat = (new Date(date*1000)).getDate();\r\n\r\n    \r\n\r\n    return(\r\n\r\n        <div className=\"temperature_container\">\r\n            <p className=\"temperature-day\">{ dateFormat }</p>\r\n            <p className=\"temperature-time\">{ weatherTimeSub }</p>\r\n            <p className=\"temperature-degree\">{ weatherDegree }</p>\r\n            <p className=\"temperature-feels\">{ weatherFeels }</p>\r\n            <p className={`wi wi-icon wi-${iconTimes}`}></p>\r\n            <p className=\"temperature-description\">{ weatherDescription }</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Weather;","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nconst LineChart = ({ xlabels, ytemps }) => {\r\n  // console.log('777', xlabels);\r\n  // console.log('888', ytemps);\r\n  const data = {\r\n    labels: xlabels,\r\n    datasets: [\r\n      {\r\n        label: \"degrees\",\r\n        data: ytemps,\r\n        fill: true,\r\n        backgroundColor: \"rgba(255, 99, 132, 0)\",\r\n        borderColor: \"rgba(255, 255, 255)\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Line data={data} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./css/App.css\";\nimport GeolocationWeather from \"./GeolocationWeather.js\";\nimport Form from \"./Form.js\";\nimport Weather from \"./Weather.js\";\nimport WeatherIcons from \"./WeatherIcons.js\";\nimport LineChart from \"./WeatherChart.js\";\n\nfunction App() {\n  let long;\n  let lat;\n\n  const xlabelsArr = [];\n  const ytempsArr = [];\n\n  const proxy = \"https://cors-anywhere.herokuapp.com/\";\n  const APP_ID = process.env.REACT_APP_API_ID;\n  const APP_ID2 = process.env.REACT_APP_API_ID2;\n\n  // state for geo weather on load\n  const [name, setName] = useState(\"Rostov-on-don\");\n  const [temperature, setTemperature] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [icon, setIcon] = useState(\"\");\n\n  // state for weather on click\n  const [search, setSearch] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [weatherTimes, setWeatherTimes] = useState([]);\n  const [iconTimes, setIconTimes] = useState(\"\");\n\n  // state for weather chart\n  const [xlabels, setXlabels] = useState([]);\n  const [ytemps, setYtemps] = useState([]);\n\n  const getWeatherGeo = () => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      console.log(\"position\", position);\n      long = position.coords.longitude;\n      lat = position.coords.latitude;\n\n      let api = `${proxy}api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&units=imperial&appid=${APP_ID}`;\n      // console.log(\"api\", api);\n      getFetchGeo(api);\n    });\n\n    async function getFetchGeo(api) {\n      let data = await fetch(api);\n      let dataJSON = await data.json();\n      // console.log(\"dataJSON\", dataJSON);\n\n      setName(dataJSON.name);\n      setTemperature(Math.floor((dataJSON.main.temp - 32) * (5 / 9)));\n      setDescription(dataJSON.weather[0].description);\n\n      let code = dataJSON.weather[0].id;\n\n      if (!(code > 699 && code < 800) && !(code > 899 && code < 1000)) {\n        setIcon(\"day-\" + WeatherIcons[code].icon);\n      }\n    }\n  };\n\n  const getWeatherClick = async () => {\n    let api = `${proxy}api.openweathermap.org/data/2.5/forecast?q=${search}&cnt=8&units=metric&appid=${APP_ID2}`;\n\n    let data = await fetch(api);\n    let dataJSON = await data.json();\n    console.log(\"dataOnClick\", dataJSON);\n    let dataList = dataJSON.list;\n    setCity(dataJSON.city.name);\n    console.log(\"dataList\", dataList);\n    console.log(\"city\", city);\n    setWeatherTimes(dataList);\n    console.log(\"weatherTimes\", weatherTimes);\n    // 111\n    getWeatherChart();\n  };\n\n  const getWeatherChart = async () => {\n    console.log(\"weatherTimes111\", weatherTimes);\n\n    await weatherTimes.map((weatherTime) => {\n      let time = new Date(weatherTime.dt * 1000).getHours();\n      let temp = Math.floor(weatherTime.main.temp);\n\n      xlabelsArr.push(time);\n      ytempsArr.push(temp);\n    });\n\n    console.log(\"xlabelsArr\", xlabelsArr);\n    setXlabels(xlabelsArr);\n    console.log(\"ytempsArr\", ytempsArr);\n    setYtemps(ytempsArr);\n  };\n\n  const updateSearch = (e) => {\n    setSearch(e.target.value);\n    // console.log(\"search\", search);\n  };\n\n  const getSearch = (e) => {\n    e.preventDefault();\n    // setQuery(search);\n    getWeatherClick();\n    setSearch(\"\");\n  };\n\n  useEffect(() => {\n    getWeatherGeo();\n  }, [name]);\n\n  return (\n    <div className=\"App\">\n      <GeolocationWeather\n        location={name}\n        temperature={temperature}\n        description={description}\n        setTemperature={setTemperature}\n        icon={icon}\n      />\n      <Form search={search} updateSearch={updateSearch} getSearch={getSearch} />\n      <h2 className=\"place\">{city}</h2>\n      <LineChart xlabels={xlabels} ytemps={ytemps} />\n      <h3 className=\"place\">Weather by hours</h3>\n      <div className=\"weather-container\">\n        {weatherTimes.map((weatherTime) => (\n          <Weather\n            key={weatherTime.dt}\n            date={weatherTime.dt}\n            weatherTime={weatherTime.dt_txt}\n            weatherDegree={weatherTime.main.temp}\n            weatherFeels={weatherTime.main.feels_like}\n            weatherCode={weatherTime.weather[0].id}\n            weatherDescription={weatherTime.weather[0].description}\n            setIconTimes={setIconTimes}\n            iconTimes={iconTimes}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport './css/weather-icons.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}